allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://jcenter.bintray.com' }
    }
}

buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        classpath 'net.ltgt.gradle:gradle-apt-plugin:0.21'
    }
}

subprojects {
    if (it.name.endsWith('-api')){
        apply plugin: 'java-library'
    } else {
        apply plugin: 'application'
        apply plugin: 'com.github.johnrengelman.shadow'
        apply plugin: 'net.ltgt.apt-eclipse'

        shadowJar {
            mergeServiceFiles()
        }

        run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
        tasks.withType(JavaCompile) {
            options.encoding = "UTF-8"
            options.compilerArgs.add('-parameters')
        }
    }

    dependencies {
        compileOnly "com.oracle.substratevm:svm"

        annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
        annotationProcessor "io.micronaut:micronaut-graal"
        annotationProcessor "io.micronaut:micronaut-inject-java"
        annotationProcessor "io.micronaut:micronaut-validation"

        implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
        implementation "io.micronaut:micronaut-inject"
        implementation "io.micronaut:micronaut-validation"
        implementation "io.micronaut:micronaut-runtime"
        implementation "javax.annotation:javax.annotation-api"

        testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
        testAnnotationProcessor "io.micronaut:micronaut-inject-java"

        testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
        testImplementation "org.junit.jupiter:junit-jupiter-api"
        testImplementation "io.micronaut.test:micronaut-test-junit5"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    }
}